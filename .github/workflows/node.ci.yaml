name: Node.js CI

on:
   pull_request:
      branches: ['develop']

jobs:
   build:
      runs-on: ubuntu-latest

      strategy:
         matrix:
            node-version: [22.x]
            # node-version: [18.x, 20.x, 22.x]
            # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

      steps:
         - uses: actions/checkout@v4

         - name: Use Node.js ${{ matrix.node-version }}
           uses: actions/setup-node@v4
           with:
              node-version: ${{ matrix.node-version }}
              cache: 'npm'

         - name: Create .env file
           run: |
              echo "NODE_ENV=${{ vars.NODE_ENV }}" >> .env
              echo "HOST=${{ vars.HOST }}" >> .env
              echo "PORT=${{ vars.PORT }}" >> .env
              echo "DATABASE_URL=${{ vars.DATABASE_URL }}" >> .env
              echo "DATABASE_TEST_URL=${{ vars.DATABASE_TEST_URL }}" >> .env
              echo "PRISMA_MIGRATE_DEV=${{ vars.PRISMA_MIGRATE_DEV }}" >> .env
              echo "DOCKER_CONTAINER_NAME=${{ vars.DOCKER_CONTAINER_NAME }}" >> .env
              echo "DOCKER_COMPOSE_TEST_UP=${{ vars.DOCKER_COMPOSE_TEST_UP }}" >> .env
              echo "DOCKER_COMPOSE_TEST_DOWN=${{ vars.DOCKER_COMPOSE_TEST_DOWN }}" >> .env

         - run: npm i -D
         - run: npm run prisma:generate
         - run: npm test

         - name: Set up QEMU
           uses: docker/setup-qemu-action@v2

         - name: Set up Docker Buildx
           uses: docker/setup-buildx-action@v3

         - name: Login to DockerHub
           uses: docker/login-action@v3
           with:
              username: ${{ secrets.DOCKERHUB_USERNAME }}
              password: ${{ secrets.DOCKERHUB_TOKEN }}

         - name: Build and push Docker image
           uses: docker/build-push-action@v5
           with:
              context: .
              file: ./Dockerfile.prod
              push: true
              tags: ${{ secrets.DOCKERHUB_USERNAME }}/anual-shop-api:dev
